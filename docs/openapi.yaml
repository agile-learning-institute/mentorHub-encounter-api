openapi: 3.0.3
info:
  title: encounters API
  description: |-
    This is a super simple API for managing encounters
  contact:
    email: devs@agile-learning.institute
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0.1 
paths:
  /api/encounters/:
    post:
      summary: Add a new encounter
      operationId: addEncounter
      requestBody:
        description: Details of the encounter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/encounters'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encounters'          
        '405':
          description: Invalid input
    get:
      summary: Get all encounters
      operationId: getEncounters
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encounters'
  /api/encounters/{id}/:
    patch:
      summary: Update an existing encounter
      operationId: updateEncounter 
      parameters:
        - name: id
          in: path
          description: ID of the encounter to be updated
          required: true
          schema:
            type: string
            format: GUID
      requestBody:
        description: Updated field
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/encounters'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encounters'          
        '404':
          description: encounter not found
        '405':
          description: Validation exception
    get:
      summary: Get an existing encounter
      description: Get an existing encounter by Id
      operationId: getEncounter
      parameters:
        - name: id
          in: path
          description: ID of encounter to return
          required: true
          schema:
            type: string
            format: GUID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encounters'          
        '404':
          description: encounter not found
        '405':
          description: Validation exception
  /api/plans/:
    post:
      summary: Add a new encounter
      operationId: addPlan
      requestBody:
        description: Details of the plan
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plans'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plans'          
        '405':
          description: Invalid input
    get:
      summary: Get all plans
      operationId: getPlans
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plans'
  /api/plans/{id}/:
    patch:
      summary: Update an existing plan
      operationId: updatePlan 
      parameters:
        - name: id
          in: path
          description: ID of the plan to be updated
          required: true
          schema:
            type: string
            format: GUID
      requestBody:
        description: Updated field
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plans'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plans'          
        '404':
          description: plan not found
        '405':
          description: Validation exception
    get:
      summary: Get an existing plan
      description: Get an existing plan by Id
      operationId: getPlan
      parameters:
        - name: id
          in: path
          description: ID of plan to return
          required: true
          schema:
            type: string
            format: GUID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plans'          
        '404':
          description: plan not found
        '405':
          description: Validation exception 

components:
  schemas:
    encounters:
      description: An encounter between a member and a mentor
      required:
        - _id
      properties:
        _id:
          description: The unique identifier for an encounter
          type: string
        date:
          description: The date/time of the encounter
          type: string
        personId:
          description: The ID of the member in the encounter
          type: string
        mentorId:
          description: The ID of the mentor in the encounter
          type: string
        planId:
          description: The ID of the plan used to start this encounter
          type: string
        status:
          description: The status of this encounter
          enum:
            - Active
            - Archived
          type: string
        observations:
          description: a list of observations
          items:
            description: An prompt to uncover information, and the observation made
            properties:
              type:
                description: The type of observation control, from an enumerated list
                enum:
                  - Radio
                  - Check
                  - Text
                type: string
              prompt:
                description: The question asked
                pattern: ^[ -~]{0,256}$
                type: string
              options:
                description: >-
                  The options for an answer (on radio and check type
                  observations)
                items:
                  pattern: ^[ -~]{0,256}$
                  type: string
                type: array
              values:
                description: >-
                  The values selected or entered (will be a single value for
                  radio and text observations)
                items:
                  pattern: ^[ -~]{0,256}$
                  type: string
                type: array
            type: object
          type: array
        lastSaved:
          description: Change tracking information
          properties:
            fromIp:
              description: Http Request remote IP address
              pattern: >-
                ^(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}$
              type: string
            byUser:
              description: UUID Of User
              type: string
            atTime:
              description: The date-time when last updated
              type: string
            correlationId:
              description: The logging correlation ID of the update transaction
              type: string
          additionalProperties: false
          type: object
      additionalProperties: false
      type: object
    plans:
      description: A plan for an encounter between a member and a mentor
      required:
        - _id
        - name
      properties:
        _id:
          description: The unique identifier for an encounter plan
          type: string
        name:
          description: The short name of the plan
          pattern: ^[^\s]{0,32}$
          type: string
        description:
          description: Description of the Plan
          pattern: ^[ -~]{0,256}$
          type: string
        status:
          description: The status of this plan
          enum:
            - Active
            - Archived
          type: string
        checklist:
          description: a checklist of planned observations
          items:
            description: >-
              An prompt to uncover information, and possible options to
              accelerate note taking
            properties:
              type:
                description: The type of observation control, from an enumerated list
                enum:
                  - Radio
                  - Check
                  - Text
                type: string
              prompt:
                description: The question asked
                pattern: ^[ -~]{0,256}$
                type: string
              options:
                description: >-
                  The options for an answer (on radio and check type
                  observations)
                items:
                  pattern: ^[ -~]{0,256}$
                  type: string
                type: array
            type: object
          type: array
        lastSaved:
          description: change tracking breadcrumb
          properties:
            fromIp:
              description: Http Request remote IP address
              pattern: >-
                ^(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}$
              type: string
            byUser:
              description: UUID Of User
              type: string
            atTime:
              description: The date-time when last updated
              type: string
            correlationId:
              description: The logging correlation ID of the update transaction
              type: string
          additionalProperties: false
          type: object
      additionalProperties: false
      type: object
